@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":SerenityParser" as SerenityParser LOGIC_COLOR
participant ":DelGrpCommandParser" as DelGrpCommandParser LOGIC_COLOR
participant "command:DelGrpCommand" as DelGrpCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delgrp grp/G04")
activate LogicManager

LogicManager -> SerenityParser : parseCommand("delgrp grp/G04")
activate SerenityParser

create DelGrpCommandParser
SerenityParser -> DelGrpCommandParser
activate DelGrpCommandParser

DelGrpCommandParser --> SerenityParser
deactivate DelGrpCommandParser

SerenityParser -> DelGrpCommandParser : parse(" grp/G04")
activate DelGrpCommandParser

create DelGrpCommand
DelGrpCommandParser -> DelGrpCommand
activate DelGrpCommand

DelGrpCommand --> DelGrpCommandParser : command
deactivate DelGrpCommand

DelGrpCommandParser --> SerenityParser : command
deactivate DelGrpCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DelGrpCommandParser -[hidden]-> SerenityParser
destroy DelGrpCommandParser

SerenityParser --> LogicManager : command
deactivate SerenityParser

LogicManager -> DelGrpCommand : execute()
activate DelGrpCommand

note left of Model
""toDel"" = the group to be deleted
end note

DelGrpCommand -> Model : deleteGroup(toDel)
activate Model

Model --> DelGrpCommand
deactivate Model

create CommandResult
DelGrpCommand -> CommandResult
activate CommandResult

CommandResult --> DelGrpCommand: result
deactivate CommandResult

DelGrpCommand --> LogicManager : result
deactivate DelGrpCommand
DelGrpCommand -[hidden]-> SerenityParser
destroy DelGrpCommand

[<--LogicManager: result
deactivate LogicManager
@enduml
